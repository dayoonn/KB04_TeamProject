package kb04.ditto.jgig.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

import kb04.ditto.jgig.entity.BoardDto;
import kb04.ditto.jgig.entity.Criteria;
import kb04.ditto.jgig.entity.NoticeDto;


@Mapper
public interface NoticeMapper {
	@Select("select * from notice order by ntc_id desc")
	List<NoticeDto> list();

//	@Insert("insert into board(brd_id,brd_category,title,brd_view,brd_content,BRD_DECLARATION,BRD_SUGGESTION,BRD_DATE_CREATED,MEM_ID)"
//			+ " values(brd_seq.nextval,#{brd_category},#{title},0,#{brd_content},0,0,sysdate,#{mem_id})")
//	void insert(NoticeDto dto);

	@Select("select * from notice where ntc_id = #{ntc_id}")
	public NoticeDto findByNo(int no);

//	@Update("update board SET brd_category=#{brd_category},title=#{title},brd_content=#{brd_content} where brd_id = #{brd_id}")
//	void update(NoticeDto dto);
	
	@Update("update notice SET ntc_view=ntc_view + 1 where ntc_id = #{ntc_id}")
	void updateView(NoticeDto dto);

//	@Delete("delete from board where brd_id = #{brd_id}")
//	public int delete(NoticeDto dto);
	
	@Select("select count(*) from notice")
	public int getTotal();
	
	@Select("SELECT ntc_id, title, mem_id, ntc_date_created, ntc_view FROM (SELECT rownum rnum, ntc_id, title, mem_id, ntc_date_created, ntc_view FROM (SELECT ntc_id, title, mem_id, ntc_date_created, ntc_view FROM notice ORDER BY ntc_id DESC) WHERE rownum <= #{pageNum} * #{amount}) WHERE rnum > (#{pageNum}-1)*#{amount} order by rnum asc")
	List<NoticeDto> listWithPaging(Criteria criteria);
	
//	@Select("select * from board where title = #{title}")
//	public List<NoticeDto> findByTitle(String title);
	
//	@Select("SELECT ntc_id, title, mem_id, ntc_date_created, ntc_view FROM (SELECT rownum rnum, ntc_id, title, mem_id, ntc_date_created, ntc_view FROM (SELECT rownum rnum, ntc_id, title, mem_id, ntc_date_created, ntc_view FROM notice ORDER BY rnum DESC) WHERE rownum <= #{pageNum} * #{amount}) WHERE rnum > (#{pageNum}-1)*#{amount} and title=#{keyword} order by rnum asc")
//	static List<BoardDto> searchListWithPagingByTitle(Criteria criteria) {
//		// TODO Auto-generated method stub
//		return null;
//	}
//	
//	@Select("select count(*) from notice where title=#{keyword}")
//	public static int getSearchTotalByTitle(String keyword) {
//		// TODO Auto-generated method stub
//		return 0;
//	}
//	
//	@Select("SELECT ntc_id, title, mem_id, ntc_date_created, ntc_view FROM (SELECT rownum rnum, ntc_id, title, mem_id, ntc_date_created, ntc_view FROM (SELECT rownum rnum, ntc_id, title, mem_id, ntc_date_created, ntc_view FROM notice ORDER BY rnum DESC) WHERE rownum <= #{pageNum} * #{amount}) WHERE rnum > (#{pageNum}-1)*#{amount} and mem_id=#{keyword} order by rnum asc")
//	static List<BoardDto> searchListWithPagingByMem(Criteria criteria) {
//		// TODO Auto-generated method stub
//		return null;
//	}
//	
//	@Select("select count(*) from notice where mem_id=#{keyword}")
//	public static int getSearchTotalByMem(String keyword) {
//		// TODO Auto-generated method stub
//		return 0;
//	}
	
	
	//@Select("SELECT ntc_id, title, mem_id, ntc_date_created, ntc_view FROM (SELECT rownum rnum, ntc_id, title, mem_id, ntc_date_created, ntc_view FROM (SELECT ntc_id, title, mem_id, ntc_date_created, ntc_view FROM notice ORDER BY ntc_id DESC) WHERE rownum <= #{pageNum} * #{amount}) WHERE rnum > (#{pageNum}-1)*#{amount} and title=#{keyword} order by rnum asc")
	@Select("SELECT ntc_id, title, mem_id, ntc_date_created, ntc_view FROM (SELECT rownum rnum, ntc_id, title, mem_id, ntc_date_created, ntc_view FROM (SELECT ntc_id, title, mem_id, ntc_date_created, ntc_view FROM notice WHERE title=#{keyword} ORDER BY ntc_id DESC) WHERE rownum <= #{pageNum} * #{amount}) WHERE rnum > (#{pageNum}-1)*#{amount} order by rnum asc")
	List<NoticeDto> searchListWithPagingByTitle(Criteria criteria);
	
	@Select("select count(*) from notice where title=#{keyword}")
	public int getSearchTotalByTitle(String keyword);
	
	@Select("SELECT ntc_id, title, mem_id, ntc_date_created, ntc_view FROM (SELECT rownum rnum, ntc_id, title, mem_id, ntc_date_created, ntc_view FROM (SELECT ntc_id, title, mem_id, ntc_date_created, ntc_view FROM notice ORDER BY ntc_id DESC) WHERE rownum <= #{pageNum} * #{amount}) WHERE rnum > (#{pageNum}-1)*#{amount} and mem_id=#{keyword} order by rnum asc")
	List<NoticeDto> searchListWithPagingByMem(Criteria criteria);
	
	@Select("select count(*) from notice where mem_id=#{keyword}")
	public int getSearchTotalByMem(String keyword);
	
}
